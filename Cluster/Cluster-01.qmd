---
title: "Não Supervisionado - Cluster"
execute: 
  warning: false
format:
  html:
    toc: true
    html-math-method: katex
    css: styles.css
editor_options: 
  chunk_output_type: inline
---

```{r}
library(tidyverse) 
library(cluster) 
library (janitor)
library(factoextra)
library (patchwork)
library (readxl)
library (fpc)
library (gt)
library (PerformanceAnalytics)
```

# Base de Dados

```{r}
# Selecionar variáveis quantitativas
df <- mtcars |> 
select (mpg, disp, hp, drat, wt, qsec) |> 

# Fazer o z-score (padronizacao)  
scale() |> data.frame()
```

# Correlações

```{r}
chart.Correlation(df, histogram = TRUE, method = "pearson")
DataExplorer::plot_correlation(df)
```

# Método Hierárquico

## Usando hclust

```{r}
#calcular as distancias da matriz utilizando a distancia euclidiana
distancia <- dist(df, method = "euclidean")

#Calcular o Cluster
clusterh <- hclust(distancia, method = "single" )

# Dendrograma
plot(clusterh, cex = 0.6, hang = -1)

#Metodo Elbow
fviz_nbclust(df, FUN = hcut, method = "wss")

#criando 5 grupos
clusterh_grupos <- cutree(clusterh, k = 5)
table(clusterh_grupos)

#transformando em data frame a saida do cluster
grupo_hierarquico <- data.frame(clusterh_grupos) |> 
  dplyr::rename (cluster = last_col())

df_final <- bind_cols(mtcars, grupo_hierarquico)

df_final_EDA <- df_final |>  pivot_longer(cols = c(1,3:7))

plot_final_EDA <- df_final_EDA |> 
  ggplot(aes(x=cluster, y=value, color= as_factor(cluster)))+
  #geom_jitter(alpha = 0.5, size = 6, width = 0.1)+
  geom_boxplot()+
  facet_grid(scales = "free_x", cols = vars(name))

plot_final_EDA


```

## Usando agnes


```{r}
#Comparar os tipos de link
m <- c( "average", "single", "complete", "ward")
names(m) <- c( "average", "single", "complete", "ward")

map(m, ~agnes(df, method = .)$ac)

#Calcular o Cluster
clustera <- agnes(df, method = "ward" )

# Dendrograma
pltree(clustera, cex = 0.6, hang = -1)

#Agnes plot ( dendograma e banner plot)
plot(clustera)

#criando 5 grupos
clustera_grupos <- cutree(clustera, k = 5)
table(clustera_grupos)

#transformando em data frame a saida do cluster
grupo_hierarquico_a <- data.frame(clustera_grupos) |> 
  dplyr::rename (cluster = last_col())

df_final <- bind_cols(mtcars, grupo_hierarquico)

df_final_EDA <- df_final |>  pivot_longer(cols = c(1,3:7))

plot_final_EDA <- df_final_EDA |> 
  ggplot(aes(x=cluster, y=value, color= as_factor(cluster)))+
  #geom_jitter(alpha = 0.5, size = 6, width = 0.1)+
  geom_boxplot()+
  facet_grid(scales = "free_x", cols = vars(name))

plot_final_EDA
```
:::callout-warning
Veja que agnes(\*, method="ward") corresponde a hclust(\*, "ward.D2").
:::

# Método Não-Hierárquico
# K-Means

O número de cluster (k) precisa ser dado

```{r}
#Método Elbow
fviz_nbclust(df, FUN = hcut, method = "wss")

#Gerando clsuters com 3, 4, 5 e 6 grupos
k3 <- kmeans(df, centers = 3)
k4 <- kmeans(df, centers = 4)
k5 <- kmeans(df, centers = 5)
k6 <- kmeans(df, centers = 6)

lista <- list(k3,k4,k5,k6)
names(lista) <- c("k3", "k4", "k5", "k6")

G <- map(lista, ~fviz_cluster(., geom = "point", data = df) +
           ggtitle(paste(length(
             (pluck(., 7))),"clusters")))

G$k3 + G$k4 + G$k5 + G$k6 

```
Escolhendo 5 grupos 

```{r}
grupo_kmeans <- data.frame(k5$cluster) |> 
  dplyr::rename (cluster = last_col())

df_final_kmeans <-  bind_cols(mtcars, grupo_kmeans)

df_final_kmeans_EDA <- df_final_kmeans |>  pivot_longer(cols = c(1,3:7))

plot_final_kmeans_EDA <- df_final_kmeans_EDA |> 
  ggplot(aes(x=cluster, y=value, color= as_factor(cluster)))+
  #geom_jitter(alpha = 0.5, size = 6, width = 0.1)+
  geom_boxplot()+
  facet_grid(scales = "free_x", cols = vars(name))

plot_final_kmeans_EDA
```

Visualizando os dados com os respetivos clsuters k-means


```{r}
df_final_kmeans |> 
  group_by(cluster) |> 
  gt(rowname_col = "name") |> 
  tab_stubhead(label ="Modelo") |> 
  tab_options(row.striping.include_table_body = TRUE) |> 
  text_transform(locations = cells_row_groups(),
                 fn = function(x) {
      paste0("Cluster: ", x)
    })
```

# DBSCAN

```{r}
dbscan <- fpc::dbscan(df, eps = .78, MinPts = 3)

grupo_dbscan <- data.frame(dbscan$cluster) |> 
  dplyr::rename (cluster = last_col())

df_final_dbscan <-  bind_cols(mtcars, grupo_dbscan)

df_final_dbscan_EDA <- df_final_dbscan |>  pivot_longer(cols = c(1,3:7))

plot_final_dbscan_EDA <- df_final_dbscan_EDA |> 
  ggplot(aes(x=cluster, y=value, color= as_factor(cluster)))+
  #geom_jitter(alpha = 0.5, size = 6, width = 0.1)+
  geom_boxplot()+
  facet_grid(scales = "free_x", cols = vars(name))

plot_final_dbscan_EDA

#Outros plots:
plot(dbscan, df)

```
